{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "vnetName": {
            "type": "string",
            "defaultValue": "linuxlevelup-vnet",
            "metadata": {
                "description": "Name of the vnet"
            }
        },
        "vnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/21",
            "metadata": {
                "description": "Address prefix for vnet"
            }
        },
        "snet1Name": {
            "type": "string",
            "defaultValue": "linuxlevelup-appgw-snet",
            "metadata": {
                "description": "Name of Application Gateway subnet"
            }
        },
        "snet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "snet2Name": {
            "type": "string",
            "defaultValue": "linuxlevel-web-snet",
            "metadata": {
                "description": "description"
            }
        },
        "snet2Prefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "snet3Name": {
            "type": "string",
            "defaultValue": "linuxlevelup-data-snet",
            "metadata": {
                "description": "description"
            }
        },
        "snet3Prefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "bastionPrefix": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "webvmNSG": {
            "type": "string",
            "defaultValue": "linuxlevelup-webvm-nsg",
            "metadata": {
                "description": "NSG for web vms"
            }
        },
        "datavmNSG": {
            "type": "string",
            "defaultValue": "linuxlevelup-datavm-nsg",
            "metadata": {
                "description": "NSG for database vm "
            }
        },
        "snetNSG": {
            "type": "string",
            "defaultValue": "linuxlevelup-snet-nsg",
            "metadata": {
                "description": "NSG for subnets"
            }
        },
        "appgwName": {
            "type": "string",
            "defaultValue": "linuxlevelup-appgw-01",
            "metadata": {
                "description": "Name of Application Gateway "
            }
        },
        "pipName": {
            "type": "string",
            "defaultValue": "Enter a unique name for the Public IP",
            "metadata": {
                "description": "Application Gateway Public IP Name"
            }
        },
        "bastionName": {
            "type": "string",
            "defaultValue": "linuxlevelupbastionHost",
            "metadata": {
                "description": "BastionHost Name"
            }
        },
        "bastionPipName": {
            "type": "string",
            "defaultValue": "Enter a unique name for the Public IP",
            "metadata": {
                "description": "Public IP for the Bastion Host "
            }
        },
        "vm1Name": {
            "type": "string",
            "defaultValue": "web-01",
            "metadata": {
                "description": "Name of web server 1"
            }
        },
        "vm2Name": {
            "type": "string",
            "defaultValue": "web-02",
            "metadata": {
                "description": "Name of web server 2"
            }
        },
        "vm3Name": {
            "type": "string",
            "defaultValue": "db-01",
            "metadata": {
                "description": "name of database server"
            }
        },
        "adminusername": {
            "type": "string",
            "defaultValue": "azlinuxadmin",
            "metadata": {
                "description": "Administrator account"
            }
        },
        "admin1PublicKey": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "SSH Public Key for web-01"
            }
        },
        "admin2PublicKey": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "SSH Public Key for web-02"
            }
        },
        "admin3PublicKey": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "SSH Public Key for db-01"
            }
        }

    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[parameters('pipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('pipName')]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
                

            }
        
        },

         {
            "name": "[parameters('bastionPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName":  "[parameters('bastionPipName')]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
                
            }
         },


        {
            "name": "[parameters('snetNSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                                        
                    {
                        "name": "SnetgAccessRule",
                        "properties": {
                            "description": "NSG rule for subnets",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('vnetPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SnetgRuleHTTP",
                        "properties": {
                            "description": "NSG rule for subnets",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[parameters('snet1Prefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('webvmNSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "Allow SSH Inbound",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('vnetPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "description": "Allow HTTP Inbound",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },

        {
            "name": "[parameters('datavmNSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "DataInbound",
                        "properties": {
                            "description": "Allow access to the database",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3306",
                            "sourceAddressPrefix": "[parameters('snet2Prefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "SSH access to the db-01",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('vnetPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },

        {
            "name": "[parameters('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('vnetName')]",
                "Project": "Linux LevelUp 2025"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('snetNSG'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix') ]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('snet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet1Prefix')]"

                        }
                    },
                    {
                        "name": "[parameters('snet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet2Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('snetNSG'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('snet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet3Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('snetNSG'))]"
                            }
                        }
                       
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('bastionPrefix')]"
                            
                        }
                       
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2023-11-01",
            "name": "[parameters('appgwName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pipName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "family": "Generation_2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snet1Name'))]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                

                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.0.1.4"
                                },
                                {
                                    "ipAddress": "10.0.1.5"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled"
                        }
                    }
                    
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('appgwName'), 'appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts',  parameters('appgwName'), 'appGatewayFrontendPort')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "HTTP_IN",
                        "properties": {
                            "RuleType": "Basic",
                            "priority": "100",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('appgwName'), 'appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appgwName'), 'appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appgwName'), 'appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                    
                ],
                "routingRules": [],
                "probes": [
                    /* {
                        "name":"HTTP_PROBE",
                      //  "id": "[concat(resourceId('Microsoft.Network/applicationGateways',parameters('appgwName')),'/probes/')]",
                        "properties": {
                            "protocol": "Http",
                            "path": "/",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-300" ]
                            }
                        }
                    } */
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": false,
                "autoscaleConfiguration": {
                "minCapacity": 0,
                "maxCapacity": 10
                }
            }
        },

// Deploying web-01      
{
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "2023-11-01",
    "name": "[concat(parameters('vm1Name'),'-NIC')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('webvmNSG'))]"
    ],
    "properties": {
        "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snet2Name'))]"
                    }
                }
            }
        ]
    }
},

{
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "2023-03-01",
    "name": "[parameters('vm1Name')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm1Name'),'-NIC') )]"
    ],
    "properties": {
        "hardwareProfile": {
            "vmSize": "Standard_B2ms"
        },
        "osProfile": {
            "computerName": "[parameters('vm1Name')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
                 "disablePasswordAuthentication": true,
                 "ssh": {
                     "publicKeys": [
                         {
                             "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                             "keyData": "[parameters('admin1PublicKey')]"
                         }
                     ]
                 }
            }
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            },
            "osDisk": {
                "createOption": "fromImage"
            }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm1Name'),'-NIC'))]"
                }
            ]
        }
    }
},

// Deploying web-02

{
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "2023-11-01",
    "name": "[concat(parameters('vm2Name'),'-NIC')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('webvmNSG'))]"
    ],
    "properties": {
        "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snet2Name'))]"
                    }
                }
            }
        ]
    }
},
{
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "2023-03-01",
    "name": "[parameters('vm2Name')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm2Name'),'-NIC') )]"
    ],
    "properties": {
        "hardwareProfile": {
            "vmSize": "Standard_B2ms"
        },
        "osProfile": {
            "computerName": "[parameters('vm2Name')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
                 "disablePasswordAuthentication": true,
                 "ssh": {
                     "publicKeys": [
                         {
                             "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                             "keyData": "[parameters('admin2PublicKey')]"
                         }
                     ]
                 }
            }
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            },
            "osDisk": {
                "createOption": "fromImage"
            }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm2Name'),'-NIC'))]"
                }
            ]
        }
    }
},


// Deploying db-01

{
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "2023-11-01",
    "name": "[concat(parameters('vm3Name'),'-NIC')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('datavmNSG'))]"
    ],
    "properties": {
        "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snet3Name'))]"
                    }
                }
            }
        ]
    }
},
{
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "2023-03-01",
    "name": "[parameters('vm3Name')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm3Name'),'-NIC') )]"
    ],
    "properties": {
        "hardwareProfile": {
            "vmSize": "Standard_B2ms"
        },
        "osProfile": {
            "computerName": "[parameters('vm3Name')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
                 "disablePasswordAuthentication": true,
                 "ssh": {
                     "publicKeys": [
                         {
                             "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                             "keyData": "[parameters('admin3PublicKey')]"
                         }
                     ]
                 }
            }
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            },
            "osDisk": {
                "createOption": "fromImage"
            }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vm3Name'),'-NIC'))]"
                }
            ]
        }
    }
},

// Deploying Bastion Host
        
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[parameters('bastionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionPipName'))]"
                            }
                        }
                    }
                ]
            }
        }
    
    ],
    "outputs": {}
}